/* soapDocumentRightOperationsBindingProxy.h
   Generated by gSOAP 2.7.16 from IRM.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapDocumentRightOperationsBindingProxy_H
#define soapDocumentRightOperationsBindingProxy_H
#include "soapH.h"

class SOAP_CMAC DocumentRightOperationsBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'DocumentRightOperationsBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	DocumentRightOperationsBindingProxy();
	/// Constructor with copy of another engine state
	DocumentRightOperationsBindingProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	DocumentRightOperationsBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	DocumentRightOperationsBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~DocumentRightOperationsBindingProxy();
	/// Initializer used by constructors
	virtual	void DocumentRightOperationsBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'AssignRole' (returns error code or SOAP_OK)
	virtual	int AssignRole(_ns7__AssignRole *ns7__AssignRole, _ns7__AssignRoleResponse *ns7__AssignRoleResponse);

	/// Web service operation 'ReassignRole' (returns error code or SOAP_OK)
	virtual	int ReassignRole(_ns7__ReassignRole *ns7__ReassignRole, _ns7__ReassignRoleResponse *ns7__ReassignRoleResponse);

	/// Web service operation 'CheckInRightsForAccount' (returns error code or SOAP_OK)
	virtual	int CheckInRightsForAccount(_ns7__CheckInRightsForAccount *ns7__CheckInRightsForAccount, _ns7__CheckInRightsForAccountResponse *ns7__CheckInRightsForAccountResponse);

	/// Web service operation 'SaveChangesToItems' (returns error code or SOAP_OK)
	virtual	int SaveChangesToItems(_ns7__SaveChangesToItems *ns7__SaveChangesToItems, _ns7__SaveChangesToItemsResponse *ns7__SaveChangesToItemsResponse);

	/// Web service operation 'UnassignRights' (returns error code or SOAP_OK)
	virtual	int UnassignRights(_ns7__UnassignRights *ns7__UnassignRights, _ns7__UnassignRightsResponse *ns7__UnassignRightsResponse);

	/// Web service operation 'ListRightsByContext' (returns error code or SOAP_OK)
	virtual	int ListRightsByContext(_ns7__ListRightsByContext *ns7__ListRightsByContext, _ns7__ListRightsByContextResponse *ns7__ListRightsByContextResponse);

	/// Web service operation 'ListRightsByAccount' (returns error code or SOAP_OK)
	virtual	int ListRightsByAccount(_ns7__ListRightsByAccount *ns7__ListRightsByAccount, _ns7__ListRightsByAccountResponse *ns7__ListRightsByAccountResponse);
};
#endif
