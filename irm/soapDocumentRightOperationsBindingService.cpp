/* soapDocumentRightOperationsBindingService.cpp
   Generated by gSOAP 2.7.16 from IRM.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#include "soapDocumentRightOperationsBindingService.h"

DocumentRightOperationsBindingService::DocumentRightOperationsBindingService()
{	DocumentRightOperationsBindingService_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

DocumentRightOperationsBindingService::DocumentRightOperationsBindingService(const struct soap &_soap) :soap(_soap)
{ }

DocumentRightOperationsBindingService::DocumentRightOperationsBindingService(soap_mode iomode)
{	DocumentRightOperationsBindingService_init(iomode, iomode);
}

DocumentRightOperationsBindingService::DocumentRightOperationsBindingService(soap_mode imode, soap_mode omode)
{	DocumentRightOperationsBindingService_init(imode, omode);
}

DocumentRightOperationsBindingService::~DocumentRightOperationsBindingService()
{ }

void DocumentRightOperationsBindingService::DocumentRightOperationsBindingService_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns3", "http://xmlns.oracle.com/irm/system", NULL, NULL},
	{"ns1", "http://xmlns.oracle.com/irm/core", NULL, NULL},
	{"ns2", "http://xmlns.oracle.com/irm/content", NULL, NULL},
	{"ns5", "http://xmlns.oracle.com/irm/classifications", NULL, NULL},
	{"ns6", "http://xmlns.oracle.com/irm/rights", NULL, NULL},
	{"ns4", "http://xmlns.oracle.com/irm/content/wsdl", NULL, NULL},
	{"ns7", "http://xmlns.oracle.com/irm/rights/wsdl", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	this->namespaces = namespaces;
};

void DocumentRightOperationsBindingService::destroy()
{	soap_destroy(this);
	soap_end(this);
}

DocumentRightOperationsBindingService *DocumentRightOperationsBindingService::copy()
{	DocumentRightOperationsBindingService *dup = SOAP_NEW_COPY(DocumentRightOperationsBindingService(*(struct soap*)this));
	return dup;
}

int DocumentRightOperationsBindingService::soap_close_socket()
{	return soap_closesock(this);
}

int DocumentRightOperationsBindingService::soap_senderfault(const char *string, const char *detailXML)
{	return ::soap_sender_fault(this, string, detailXML);
}

int DocumentRightOperationsBindingService::soap_senderfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_sender_fault_subcode(this, subcodeQName, string, detailXML);
}

int DocumentRightOperationsBindingService::soap_receiverfault(const char *string, const char *detailXML)
{	return ::soap_receiver_fault(this, string, detailXML);
}

int DocumentRightOperationsBindingService::soap_receiverfault(const char *subcodeQName, const char *string, const char *detailXML)
{	return ::soap_receiver_fault_subcode(this, subcodeQName, string, detailXML);
}

void DocumentRightOperationsBindingService::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
void DocumentRightOperationsBindingService::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}

char *DocumentRightOperationsBindingService::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

void DocumentRightOperationsBindingService::soap_noheader()
{	header = NULL;
}

int DocumentRightOperationsBindingService::run(int port)
{	if (soap_valid_socket(bind(NULL, port, 100)))
	{	for (;;)
		{	if (!soap_valid_socket(accept()))
				return this->error;
			(void)serve();
			soap_destroy(this);
			soap_end(this);
		}
	}
	else
		return this->error;
	return SOAP_OK;
}

SOAP_SOCKET DocumentRightOperationsBindingService::bind(const char *host, int port, int backlog)
{	return soap_bind(this, host, port, backlog);
}

SOAP_SOCKET DocumentRightOperationsBindingService::accept()
{	return soap_accept(this);
}

int DocumentRightOperationsBindingService::serve()
{
#ifndef WITH_FASTCGI
	unsigned int k = this->max_keep_alive;
#endif
	do
	{	soap_begin(this);
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			this->error = SOAP_EOF;
			return soap_send_fault(this);
		}
#endif

		soap_begin(this);

#ifndef WITH_FASTCGI
		if (this->max_keep_alive > 0 && !--k)
			this->keep_alive = 0;
#endif

		if (soap_begin_recv(this))
		{	if (this->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(this);
#else 
				return soap_send_fault(this);
#endif
			}
			soap_closesock(this);

			continue;
		}

		if (soap_envelope_begin_in(this)
		 || soap_recv_header(this)
		 || soap_body_begin_in(this)
		 || dispatch() || (this->fserveloop && this->fserveloop(this)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(this);
#else
			return soap_send_fault(this);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(this);
		soap_end(this);
	} while (1);
#else
	} while (this->keep_alive);
#endif
	return SOAP_OK;
}

static int serve___ns7__AssignRole(DocumentRightOperationsBindingService*);
static int serve___ns7__ReassignRole(DocumentRightOperationsBindingService*);
static int serve___ns7__CheckInRightsForAccount(DocumentRightOperationsBindingService*);
static int serve___ns7__SaveChangesToItems(DocumentRightOperationsBindingService*);
static int serve___ns7__UnassignRights(DocumentRightOperationsBindingService*);
static int serve___ns7__ListRightsByContext(DocumentRightOperationsBindingService*);
static int serve___ns7__ListRightsByAccount(DocumentRightOperationsBindingService*);

int DocumentRightOperationsBindingService::dispatch()
{	if (soap_peek_element(this))
		return this->error;
	if (!soap_match_tag(this, this->tag, "ns7:AssignRole"))
		return serve___ns7__AssignRole(this);
	if (!soap_match_tag(this, this->tag, "ns7:ReassignRole"))
		return serve___ns7__ReassignRole(this);
	if (!soap_match_tag(this, this->tag, "ns7:CheckInRightsForAccount"))
		return serve___ns7__CheckInRightsForAccount(this);
	if (!soap_match_tag(this, this->tag, "ns7:SaveChangesToItems"))
		return serve___ns7__SaveChangesToItems(this);
	if (!soap_match_tag(this, this->tag, "ns7:UnassignRights"))
		return serve___ns7__UnassignRights(this);
	if (!soap_match_tag(this, this->tag, "ns7:ListRightsByContext"))
		return serve___ns7__ListRightsByContext(this);
	if (!soap_match_tag(this, this->tag, "ns7:ListRightsByAccount"))
		return serve___ns7__ListRightsByAccount(this);
	return this->error = SOAP_NO_METHOD;
}

static int serve___ns7__AssignRole(DocumentRightOperationsBindingService *soap)
{	struct __ns7__AssignRole soap_tmp___ns7__AssignRole;
	_ns7__AssignRoleResponse ns7__AssignRoleResponse;
	ns7__AssignRoleResponse.soap_default(soap);
	soap_default___ns7__AssignRole(soap, &soap_tmp___ns7__AssignRole);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__AssignRole(soap, &soap_tmp___ns7__AssignRole, "-ns7:AssignRole", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->AssignRole(soap_tmp___ns7__AssignRole.ns7__AssignRole, &ns7__AssignRoleResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__AssignRoleResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__AssignRoleResponse.soap_put(soap, "ns7:AssignRoleResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__AssignRoleResponse.soap_put(soap, "ns7:AssignRoleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__ReassignRole(DocumentRightOperationsBindingService *soap)
{	struct __ns7__ReassignRole soap_tmp___ns7__ReassignRole;
	_ns7__ReassignRoleResponse ns7__ReassignRoleResponse;
	ns7__ReassignRoleResponse.soap_default(soap);
	soap_default___ns7__ReassignRole(soap, &soap_tmp___ns7__ReassignRole);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__ReassignRole(soap, &soap_tmp___ns7__ReassignRole, "-ns7:ReassignRole", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ReassignRole(soap_tmp___ns7__ReassignRole.ns7__ReassignRole, &ns7__ReassignRoleResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__ReassignRoleResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__ReassignRoleResponse.soap_put(soap, "ns7:ReassignRoleResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__ReassignRoleResponse.soap_put(soap, "ns7:ReassignRoleResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__CheckInRightsForAccount(DocumentRightOperationsBindingService *soap)
{	struct __ns7__CheckInRightsForAccount soap_tmp___ns7__CheckInRightsForAccount;
	_ns7__CheckInRightsForAccountResponse ns7__CheckInRightsForAccountResponse;
	ns7__CheckInRightsForAccountResponse.soap_default(soap);
	soap_default___ns7__CheckInRightsForAccount(soap, &soap_tmp___ns7__CheckInRightsForAccount);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__CheckInRightsForAccount(soap, &soap_tmp___ns7__CheckInRightsForAccount, "-ns7:CheckInRightsForAccount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->CheckInRightsForAccount(soap_tmp___ns7__CheckInRightsForAccount.ns7__CheckInRightsForAccount, &ns7__CheckInRightsForAccountResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__CheckInRightsForAccountResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__CheckInRightsForAccountResponse.soap_put(soap, "ns7:CheckInRightsForAccountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__CheckInRightsForAccountResponse.soap_put(soap, "ns7:CheckInRightsForAccountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__SaveChangesToItems(DocumentRightOperationsBindingService *soap)
{	struct __ns7__SaveChangesToItems soap_tmp___ns7__SaveChangesToItems;
	_ns7__SaveChangesToItemsResponse ns7__SaveChangesToItemsResponse;
	ns7__SaveChangesToItemsResponse.soap_default(soap);
	soap_default___ns7__SaveChangesToItems(soap, &soap_tmp___ns7__SaveChangesToItems);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__SaveChangesToItems(soap, &soap_tmp___ns7__SaveChangesToItems, "-ns7:SaveChangesToItems", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->SaveChangesToItems(soap_tmp___ns7__SaveChangesToItems.ns7__SaveChangesToItems, &ns7__SaveChangesToItemsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__SaveChangesToItemsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__SaveChangesToItemsResponse.soap_put(soap, "ns7:SaveChangesToItemsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__SaveChangesToItemsResponse.soap_put(soap, "ns7:SaveChangesToItemsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__UnassignRights(DocumentRightOperationsBindingService *soap)
{	struct __ns7__UnassignRights soap_tmp___ns7__UnassignRights;
	_ns7__UnassignRightsResponse ns7__UnassignRightsResponse;
	ns7__UnassignRightsResponse.soap_default(soap);
	soap_default___ns7__UnassignRights(soap, &soap_tmp___ns7__UnassignRights);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__UnassignRights(soap, &soap_tmp___ns7__UnassignRights, "-ns7:UnassignRights", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->UnassignRights(soap_tmp___ns7__UnassignRights.ns7__UnassignRights, &ns7__UnassignRightsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__UnassignRightsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__UnassignRightsResponse.soap_put(soap, "ns7:UnassignRightsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__UnassignRightsResponse.soap_put(soap, "ns7:UnassignRightsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__ListRightsByContext(DocumentRightOperationsBindingService *soap)
{	struct __ns7__ListRightsByContext soap_tmp___ns7__ListRightsByContext;
	_ns7__ListRightsByContextResponse ns7__ListRightsByContextResponse;
	ns7__ListRightsByContextResponse.soap_default(soap);
	soap_default___ns7__ListRightsByContext(soap, &soap_tmp___ns7__ListRightsByContext);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__ListRightsByContext(soap, &soap_tmp___ns7__ListRightsByContext, "-ns7:ListRightsByContext", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ListRightsByContext(soap_tmp___ns7__ListRightsByContext.ns7__ListRightsByContext, &ns7__ListRightsByContextResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__ListRightsByContextResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__ListRightsByContextResponse.soap_put(soap, "ns7:ListRightsByContextResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__ListRightsByContextResponse.soap_put(soap, "ns7:ListRightsByContextResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

static int serve___ns7__ListRightsByAccount(DocumentRightOperationsBindingService *soap)
{	struct __ns7__ListRightsByAccount soap_tmp___ns7__ListRightsByAccount;
	_ns7__ListRightsByAccountResponse ns7__ListRightsByAccountResponse;
	ns7__ListRightsByAccountResponse.soap_default(soap);
	soap_default___ns7__ListRightsByAccount(soap, &soap_tmp___ns7__ListRightsByAccount);
	soap->encodingStyle = NULL;
	if (!soap_get___ns7__ListRightsByAccount(soap, &soap_tmp___ns7__ListRightsByAccount, "-ns7:ListRightsByAccount", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = soap->ListRightsByAccount(soap_tmp___ns7__ListRightsByAccount.ns7__ListRightsByAccount, &ns7__ListRightsByAccountResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns7__ListRightsByAccountResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns7__ListRightsByAccountResponse.soap_put(soap, "ns7:ListRightsByAccountResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns7__ListRightsByAccountResponse.soap_put(soap, "ns7:ListRightsByAccountResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}
/* End of server object code */
